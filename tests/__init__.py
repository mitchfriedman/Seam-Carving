from seamcarver.seam_carving import Image, Pixel
test_matrix = [
    [(255, 101, 51), (255, 101, 153), (255, 101, 255)],
    [(255, 153, 51), (255, 153, 153), (255, 153, 255)],
    [(255, 203, 51), (255, 204, 153), (255, 205, 255)],
    [(255, 255, 51), (255, 255, 153), (255, 255, 255)]
]

test_graph = [
    [
        ((153 - 255)**2)**2 + ((255 - 153)**2)**2,  # row 1
        ((255 - 51)**2)**2 + ((255 - 153)**2)**2,   # row 1
        ((153 - 51)**2)**2 + ((255 - 153)**2)**2],  # row 1
    [
        ((255 - 153)**2)**2 + ((203 - 101)**2)**2,  # row 2
        ((255 - 51)**2)**2 + ((204 - 101)**2)**2,   # row 2
        ((153 - 51)**2)**2 + ((205 - 101)**2)**2],  # row 2
    [
        ((205 - 204)**2 + (255 - 153)**2)**2 + ((255 - 153)**2)**2,  # row 3
        ((205 - 203)**2 + (255 - 51)**2)**2 + ((255 - 153)**2)**2,  # row 3
        ((204 - 203)**2 + (153 - 51)**2)**2 + ((255 - 153)**2)**2   # row 3
    ],
    [
        ((255 - 153)**2)**2 + ((203 - 101)**2)**2,  # row 4
        ((255 - 51)**2)**2 + ((204 - 101)**2)**2,  # row 4
        ((153 - 51)**2)**2 + ((205 - 101)**2)**2   # row 4
    ]
]

def get_shortest_seam_index():
    sums = []
    for i in range(3):
        sums.append(reduce(lambda x, y: x + y, test_graph[i]))
    pos = sums.index(min(sums))
    return pos


def create_test_image():
    image = Image((3, 4))

    for i in range(4):
        for j in range(3):
            image.set_pixel((j, i), Pixel(i, j, test_matrix[i][j]))

    return image


